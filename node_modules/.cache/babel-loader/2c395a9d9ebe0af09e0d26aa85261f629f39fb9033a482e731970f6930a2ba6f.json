{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"SangJiTu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    id: \"SangJiTU\"\n  }, null, -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createElementVNode","id"],"sources":["D:\\project\\idea-project\\jiapudemo1\\jiapudemo1\\src\\components\\SangJiTu.vue"],"sourcesContent":["<template>\r\n  <div class=\"SangJiTu\">\r\n    <div id=\"SangJiTU\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\nimport { sankey, sankeyLinkHorizontal } from \"d3-sankey\";\r\n\r\nexport default {\r\n  name: \"SangJiTu\",\r\n  props: {\r\n    sankeyData: Object, // 从父组件传递过来的桑基图数据\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  watch: {\r\n    sankeyData(newData) {\r\n      if (newData && newData.nodes.length > 0) {\r\n        this.updateChart(newData); // 当数据变化时更新桑基图\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.svg = d3\r\n          .select(\"#SangJiTU\")\r\n          .append(\"svg\")\r\n          .attr(\"width\", \"100%\")\r\n          .attr(\"height\", 700);\r\n    },\r\n\r\n    updateChart(sankeyData) {\r\n      // 清空之前的内容\r\n      this.svg.selectAll(\"*\").remove();\r\n\r\n      const width = document.getElementById(\"SangJiTU\").offsetWidth;\r\n      const height = 700;\r\n\r\n      const sankeyGenerator = sankey()\r\n          .nodeWidth(20)\r\n          .nodePadding(15)\r\n          .extent([\r\n            [0, 0],\r\n            [width, height],\r\n          ]);\r\n\r\n      // 应用数据\r\n      const { nodes, links } = sankeyGenerator({\r\n        nodes: sankeyData.nodes.map(d => Object.assign({}, d)),\r\n        links: sankeyData.links.map(d => Object.assign({}, d)),\r\n      });\r\n\r\n      // 绘制链接\r\n      this.svg\r\n          .append(\"g\")\r\n          .selectAll(\"path\")\r\n          .data(links)\r\n          .join(\"path\")\r\n          .attr(\"d\", sankeyLinkHorizontal())\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke\", d => d.color || \"#aaa\")\r\n          .attr(\"stroke-width\", d => Math.max(1, d.width))\r\n          .attr(\"opacity\", 0.7);\r\n\r\n      // 绘制节点\r\n      this.svg\r\n          .append(\"g\")\r\n          .selectAll(\"rect\")\r\n          .data(nodes)\r\n          .join(\"rect\")\r\n          .attr(\"x\", d => d.x0)\r\n          .attr(\"y\", d => d.y0)\r\n          .attr(\"width\", d => d.x1 - d.x0)\r\n          .attr(\"height\", d => d.y1 - d.y0)\r\n          .attr(\"fill\", \"#69b3a2\")\r\n          .attr(\"stroke\", \"#000\");\r\n\r\n      // 添加节点标签\r\n      this.svg\r\n          .append(\"g\")\r\n          .selectAll(\"text\")\r\n          .data(nodes)\r\n          .join(\"text\")\r\n          .attr(\"x\", d => d.x0 - 6)\r\n          .attr(\"y\", d => (d.y1 + d.y0) / 2)\r\n          .attr(\"dy\", \"0.35em\")\r\n          .attr(\"text-anchor\", \"end\")\r\n          .text(d => d.name)\r\n          .attr(\"font-size\", \"12px\")\r\n          .attr(\"fill\", \"#333\");\r\n\r\n      // 添加列标签\r\n      const columnLabels = [\"始祖原居地\", \"始祖迁居地\", \"始迁祖原居地\", \"始迁祖迁居地\"];\r\n      columnLabels.forEach((label, i) => {\r\n        this.svg\r\n            .append(\"text\")\r\n            .attr(\"x\", (i * width) / 4 + width / 8)\r\n            .attr(\"y\", height - 20)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", \"16px\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .text(label);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.SangJiTu {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n#SangJiTU {\r\n  width: 100%;\r\n  height: 700px;\r\n  margin: 20px auto;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;uBAArBC,mBAAA,CAEM,OAFNC,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJC,mBAAA,CAAyB;IAApBC,EAAE,EAAC;EAAU,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}