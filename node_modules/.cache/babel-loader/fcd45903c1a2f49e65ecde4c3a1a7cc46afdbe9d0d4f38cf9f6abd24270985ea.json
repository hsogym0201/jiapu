{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport * as echarts from 'echarts/core';\nimport { TitleComponent, TooltipComponent } from 'echarts/components';\nimport { SankeyChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n// 注册必要的组件\necharts.use([TitleComponent, TooltipComponent, SankeyChart, CanvasRenderer]);\nexport default {\n  name: 'SangJiTu',\n  props: {\n    selectedProvince: {\n      type: String,\n      required: true\n    },\n    selectedSurname: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      var chartDom = document.getElementById('main');\n      console.log(chartDom); // 检查是否找到 DOM 元素\n      if (!chartDom) {\n        console.error('无法找到图表容器');\n        return;\n      }\n      var myChart = echarts.init(chartDom);\n      myChart.showLoading();\n\n      // 初始加载时使用默认的数据（浙江省，李姓）\n      this.generateSankeyData(this.selectedProvince, this.selectedSurname).then(data => {\n        myChart.hideLoading();\n        myChart.setOption({\n          title: {\n            text: '家族迁徙桑基图'\n          },\n          tooltip: {\n            trigger: 'item',\n            triggerOn: 'mousemove'\n          },\n          series: [{\n            type: 'sankey',\n            data: data.nodes,\n            links: data.links,\n            emphasis: {\n              focus: 'adjacency'\n            },\n            levels: [{\n              depth: 0,\n              itemStyle: {\n                color: '#fbb4ae'\n              },\n              lineStyle: {\n                color: 'source',\n                opacity: 0.6\n              }\n            }, {\n              depth: 1,\n              itemStyle: {\n                color: '#b3cde3'\n              },\n              lineStyle: {\n                color: 'source',\n                opacity: 0.6\n              }\n            }, {\n              depth: 2,\n              itemStyle: {\n                color: '#ccebc5'\n              },\n              lineStyle: {\n                color: 'source',\n                opacity: 0.6\n              }\n            }, {\n              depth: 3,\n              itemStyle: {\n                color: '#decbe4'\n              },\n              lineStyle: {\n                color: 'source',\n                opacity: 0.6\n              }\n            }],\n            lineStyle: {\n              curveness: 0.5\n            }\n          }]\n        });\n      }).catch(error => {\n        console.error('Error loading data for Sankey chart:', error);\n        myChart.hideLoading();\n      });\n    },\n    // 生成桑基图的数据\n    async generateSankeyData(province, surname) {\n      const filteredData = this.data.filter(item => item.居地 === province && item.姓氏 === surname);\n      console.log('Filtered data:', filteredData); // 检查数据\n\n      const nodes = [{\n        name: '始祖原居地'\n      }, {\n        name: '始祖迁居地'\n      }, {\n        name: '始迁祖原居地'\n      }, {\n        name: '始迁祖迁居地'\n      }];\n      const links = [];\n      filteredData.forEach(item => {\n        const startNode = item['始祖原居地'] || '未知';\n        const endNode = item['始祖迁居地'] || '未知';\n        const startMigrationNode = item['始迁祖原居地'] || '未知';\n        const endMigrationNode = item['始迁祖迁居地'] || '未知';\n        if (startNode !== '未知' && endNode !== '未知') {\n          links.push({\n            source: startNode,\n            target: endNode\n          });\n        }\n        if (startMigrationNode !== '未知' && endMigrationNode !== '未知') {\n          links.push({\n            source: startMigrationNode,\n            target: endMigrationNode\n          });\n        }\n      });\n      return {\n        nodes,\n        links\n      };\n    }\n  }\n};","map":{"version":3,"names":["echarts","TitleComponent","TooltipComponent","SankeyChart","CanvasRenderer","use","name","props","selectedProvince","type","String","required","selectedSurname","data","Array","mounted","initChart","methods","chartDom","document","getElementById","console","log","error","myChart","init","showLoading","generateSankeyData","then","hideLoading","setOption","title","text","tooltip","trigger","triggerOn","series","nodes","links","emphasis","focus","levels","depth","itemStyle","color","lineStyle","opacity","curveness","catch","province","surname","filteredData","filter","item","居地","姓氏","forEach","startNode","endNode","startMigrationNode","endMigrationNode","push","source","target"],"sources":["D:\\project\\idea-project\\jiapudemo1\\jiapudemo1\\src\\components\\SangJiTu.vue"],"sourcesContent":["<template>\r\n  <div class=\"SangJiTu\">\r\n    <div id=\"main\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts/core';\r\nimport { TitleComponent, TooltipComponent } from 'echarts/components';\r\nimport { SankeyChart } from 'echarts/charts';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\n\r\n// 注册必要的组件\r\necharts.use([TitleComponent, TooltipComponent, SankeyChart, CanvasRenderer]);\r\n\r\nexport default {\r\n  name: 'SangJiTu',\r\n  props: {\r\n    selectedProvince: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    selectedSurname: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    data: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      var chartDom = document.getElementById('main');\r\n      console.log(chartDom); // 检查是否找到 DOM 元素\r\n      if (!chartDom) {\r\n        console.error('无法找到图表容器');\r\n        return;\r\n      }\r\n      var myChart = echarts.init(chartDom);\r\n\r\n      myChart.showLoading();\r\n\r\n      // 初始加载时使用默认的数据（浙江省，李姓）\r\n      this.generateSankeyData(this.selectedProvince, this.selectedSurname).then(data => {\r\n        myChart.hideLoading();\r\n        myChart.setOption({\r\n          title: {\r\n            text: '家族迁徙桑基图'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            triggerOn: 'mousemove'\r\n          },\r\n          series: [\r\n            {\r\n              type: 'sankey',\r\n              data: data.nodes,\r\n              links: data.links,\r\n              emphasis: {\r\n                focus: 'adjacency'\r\n              },\r\n              levels: [\r\n                {\r\n                  depth: 0,\r\n                  itemStyle: { color: '#fbb4ae' },\r\n                  lineStyle: { color: 'source', opacity: 0.6 }\r\n                },\r\n                {\r\n                  depth: 1,\r\n                  itemStyle: { color: '#b3cde3' },\r\n                  lineStyle: { color: 'source', opacity: 0.6 }\r\n                },\r\n                {\r\n                  depth: 2,\r\n                  itemStyle: { color: '#ccebc5' },\r\n                  lineStyle: { color: 'source', opacity: 0.6 }\r\n                },\r\n                {\r\n                  depth: 3,\r\n                  itemStyle: { color: '#decbe4' },\r\n                  lineStyle: { color: 'source', opacity: 0.6 }\r\n                }\r\n              ],\r\n              lineStyle: {\r\n                curveness: 0.5\r\n              }\r\n            }\r\n          ]\r\n        });\r\n      }).catch(error => {\r\n        console.error('Error loading data for Sankey chart:', error);\r\n        myChart.hideLoading();\r\n      });\r\n    },\r\n\r\n    // 生成桑基图的数据\r\n    async generateSankeyData(province, surname) {\r\n      const filteredData = this.data.filter(item => item.居地 === province && item.姓氏 === surname);\r\n      console.log('Filtered data:', filteredData);  // 检查数据\r\n\r\n      const nodes = [\r\n        { name: '始祖原居地' },\r\n        { name: '始祖迁居地' },\r\n        { name: '始迁祖原居地' },\r\n        { name: '始迁祖迁居地' }\r\n      ];\r\n\r\n      const links = [];\r\n\r\n      filteredData.forEach(item => {\r\n        const startNode = item['始祖原居地'] || '未知';\r\n        const endNode = item['始祖迁居地'] || '未知';\r\n        const startMigrationNode = item['始迁祖原居地'] || '未知';\r\n        const endMigrationNode = item['始迁祖迁居地'] || '未知';\r\n\r\n        if (startNode !== '未知' && endNode !== '未知') {\r\n          links.push({ source: startNode, target: endNode });\r\n        }\r\n\r\n        if (startMigrationNode !== '未知' && endMigrationNode !== '未知') {\r\n          links.push({ source: startMigrationNode, target: endMigrationNode });\r\n        }\r\n      });\r\n\r\n      return {\r\n        nodes,\r\n        links\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#main {\r\n  width: 100%;\r\n  height: 400px; /* 或者其他合适的高度 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}