{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from './assets/picture/background4.jpg';\nimport _imports_1 from './assets/picture/background5.jpg';\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"navbar\"\n};\nconst _hoisted_3 = {\n  class: \"navbar-menu\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"horizontal-container\"\n};\nconst _hoisted_6 = {\n  class: \"horizontal-container\"\n};\nconst _hoisted_7 = {\n  class: \"horizontal-container\"\n};\nconst _hoisted_8 = {\n  class: \"horizontal-container\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"popup\"\n};\nconst _hoisted_10 = {\n  class: \"popup-content\"\n};\nexport function render(_ctx, _cache) {\n  const _component_XingShiXuanZe = _resolveComponent(\"XingShiXuanZe\");\n  const _component_DiTu1 = _resolveComponent(\"DiTu1\");\n  const _component_CiYun = _resolveComponent(\"CiYun\");\n  const _component_DiTu2 = _resolveComponent(\"DiTu2\");\n  const _component_ZheXianTu = _resolveComponent(\"ZheXianTu\");\n  const _component_ZhuZhuangTu = _resolveComponent(\"ZhuZhuangTu\");\n  const _component_SangJiTu = _resolveComponent(\"SangJiTu\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createStaticVNode(\"<div class=\\\"focus-image\\\" data-v-7ba5bd90><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Focus Image\\\" class=\\\"image\\\" data-v-7ba5bd90><div class=\\\"title\\\" data-v-7ba5bd90><h1 id=\\\"xungen\\\" data-v-7ba5bd90>寻 根 问 祖</h1><h1 data-v-7ba5bd90>探 索 家 族 的 历 史 脉 络</h1><h3 data-v-7ba5bd90>每 个 姓 氏 背 后 都 有 一 段 深 厚 的 历 史 与 文 化...</h3></div></div><div class=\\\"focus-img\\\" data-v-7ba5bd90><img src=\\\"\" + _imports_1 + \"\\\" alt=\\\"Focus Image\\\" class=\\\"img\\\" data-v-7ba5bd90><div class=\\\"content\\\" data-v-7ba5bd90><div class=\\\"logo\\\" data-v-7ba5bd90><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Logo\\\" data-v-7ba5bd90></div><div class=\\\"text-content\\\" data-v-7ba5bd90><h1 style=\\\"font-size:3vw;margin-top:-7vw;\\\" data-v-7ba5bd90>寻根问祖</h1><h1 style=\\\"font-size:3vw;\\\" data-v-7ba5bd90>可以看见的家谱可视化平台</h1><h1 style=\\\"font-size:3vw;\\\" data-v-7ba5bd90>VI5小组</h1></div></div></div>\", 2)), _createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"navbar-title\"\n  }, [_createTextVNode(\" 寻根问祖 \"), _createElementVNode(\"span\", null, \"可以看见的家谱可视化平台\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.menuItems, (item, index) => {\n    return _openBlock(), _createElementBlock(\"a\", {\n      key: index,\n      href: \"#\",\n      class: _normalizeClass(['menu-item', {\n        active: _ctx.activeIndex === index\n      }]),\n      onClick: $event => _ctx.setActive(index)\n    }, _toDisplayString(item), 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])]), _cache[3] || (_cache[3] = _createElementVNode(\"h4\", null, \"家谱地图展示--了解你的姓氏在全国各地的家族故事\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_XingShiXuanZe), _createVNode(_component_DiTu1)]), _cache[4] || (_cache[4] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"h4\", null, \"地域姓氏构成对比--探索各地的家族足迹\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_CiYun, {\n    wordArr: _ctx.words,\n    onWordClicked: _ctx.handleWordClick\n  }, null, 8 /* PROPS */, [\"wordArr\", \"onWordClicked\"]), _createVNode(_component_DiTu2, {\n    onProvinceClicked: _ctx.handleProvinceClick\n  }, null, 8 /* PROPS */, [\"onProvinceClicked\"])]), _cache[6] || (_cache[6] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"h4\", null, \"姓氏时空上的分布趋势--深入家族传承之路与繁衍之势\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_ZheXianTu, {\n    ref: \"zheXianTu\",\n    versionData: _ctx.versionData,\n    chartTitle: _ctx.chartTitle\n  }, null, 8 /* PROPS */, [\"versionData\", \"chartTitle\"]), _createVNode(_component_ZhuZhuangTu, {\n    ref: \"zhuZhuangTu\",\n    versionTypeData: _ctx.versionTypeData,\n    ChartTitle: _ctx.ChartTitle\n  }, null, 8 /* PROPS */, [\"versionTypeData\", \"ChartTitle\"])]), _cache[8] || (_cache[8] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _cache[9] || (_cache[9] = _createElementVNode(\"h4\", null, \"家族迁徙路径--探索家族的迁徙脉络\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_SangJiTu, {\n    ref: \"sangJiTu\",\n    sankeyData: _ctx.sankeyData\n  }, null, 8 /* PROPS */, [\"sankeyData\"])])]), _createCommentVNode(\" ##################################### \"), _ctx.showPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.popupMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.closePopup && _ctx.closePopup(...args))\n  }, \"关闭\")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ##################################### \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","id","class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createStaticVNode","_hoisted_2","_createTextVNode","_hoisted_3","_renderList","_ctx","menuItems","item","index","href","_normalizeClass","active","activeIndex","onClick","$event","setActive","_hoisted_4","_hoisted_5","_createVNode","_component_XingShiXuanZe","_component_DiTu1","_hoisted_6","_component_CiYun","wordArr","words","onWordClicked","handleWordClick","_component_DiTu2","onProvinceClicked","handleProvinceClick","_hoisted_7","_component_ZheXianTu","ref","versionData","chartTitle","_component_ZhuZhuangTu","versionTypeData","ChartTitle","_hoisted_8","_component_SangJiTu","sankeyData","_createCommentVNode","showPopup","_hoisted_9","_hoisted_10","_toDisplayString","popupMessage","_cache","args","closePopup"],"sources":["D:\\project\\idea-project\\jiapudemo1\\jiapudemo1\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n\n    <div class=\"focus-image\" >\n      <img src=\"./assets/picture/background4.jpg\" alt=\"Focus Image\" class=\"image\" />\n      <div class=\"title\">\n        <h1 id = \"xungen\">寻 根 问 祖</h1>\n        <h1>探 索 家 族 的 历 史 脉 络</h1>\n        <h3>每 个 姓 氏 背 后 都 有 一 段 深 厚 的 历 史 与 文 化...</h3>\n      </div>\n    </div>\n\n\n    <div class=\"focus-img\">\n      <img src=\"./assets/picture/background5.jpg\" alt=\"Focus Image\" class=\"img\" />\n\n      <div class=\"content\">\n        <div class=\"logo\">\n          <img src=\"./assets/picture/background4.jpg\" alt=\"Logo\" />\n        </div>\n\n        <div class=\"text-content\">\n          <h1 style=\"font-size: 3vw; margin-top: -7vw;\">寻根问祖</h1>\n          <h1 style=\"font-size: 3vw; \">可以看见的家谱可视化平台</h1>\n          <h1 style=\"font-size: 3vw; \">VI5小组</h1>\n        </div>\n\n      </div>\n    </div>\n\n\n    <div class=\"navbar\">\n      <div class=\"navbar-title\">\n        寻根问祖 <span>可以看见的家谱可视化平台</span>\n      </div>\n      <div class=\"navbar-menu\">\n        <a\n            v-for=\"(item, index) in menuItems\"\n            :key=\"index\"\n            href=\"#\"\n            :class=\"['menu-item', { active: activeIndex === index }]\"\n            @click=\"setActive(index)\"\n        >\n          {{ item }}\n        </a>\n      </div>\n    </div>\n\n    <h4>家谱地图展示--了解你的姓氏在全国各地的家族故事</h4>\n    <div class=\"horizontal-container\">\n      <XingShiXuanZe />\n      <DiTu1 />\n    </div>\n\n    <hr />\n    <h4>地域姓氏构成对比--探索各地的家族足迹</h4>\n    <div class=\"horizontal-container\">\n      <CiYun :wordArr=\"words\" @word-clicked=\"handleWordClick\" />\n      <DiTu2 @province-clicked=\"handleProvinceClick\" />\n    </div>\n\n    <hr />\n    <h4>姓氏时空上的分布趋势--深入家族传承之路与繁衍之势</h4>\n    <div class=\"horizontal-container\">\n      <ZheXianTu ref=\"zheXianTu\" :versionData=\"versionData\" :chartTitle=\"chartTitle\" />\n      <ZhuZhuangTu ref=\"zhuZhuangTu\" :versionTypeData=\"versionTypeData\" :ChartTitle=\"ChartTitle\" />\n    </div>\n    <hr>\n    <h4>家族迁徙路径--探索家族的迁徙脉络</h4>\n    <div class=\"horizontal-container\">\n      <SangJiTu ref=\"sangJiTu\" :sankeyData=\"sankeyData\" />\n    </div>\n\n  </div>\n\n<!-- ##################################### -->\n  <div v-if=\"showPopup\" class=\"popup\">\n    <div class=\"popup-content\">\n      <p>{{ popupMessage }}</p>\n      <button @click=\"closePopup\">关闭</button>\n    </div>\n  </div>\n<!-- ##################################### -->\n\n</template>\n\n<script>\nimport XingShiXuanZe from './components/XingShiXuanZe.vue';\nimport DiTu1 from './components/DiTu1.vue';\nimport CiYun from '@/components/CiYun.vue';\nimport DiTu2 from '@/components/DiTu2.vue';\nimport ZheXianTu from '@/components/ZheXianTu.vue';\nimport ZhuZhuangTu from '@/components/ZhuZhuangTu.vue';\nimport SangJiTu  from \"@/components/SangJiTu.vue\";\n\nconst jsonData = require('./assets/new.json');\n\nexport default {\n  name: 'App',\n  components: {\n    SangJiTu,\n    XingShiXuanZe,\n    DiTu1,\n    CiYun,\n    DiTu2,\n    ZheXianTu,\n    ZhuZhuangTu,\n  },\n  data() {\n    return {\n      menuItems: ['家谱地图展示', '地域姓氏构成对比', '姓氏时空上的分布趋势'],\n      activeIndex: 0,\n      words: [],\n      versionData: [],//折线图版本数据\n      versionTypeData: [],//柱状图版本类型数据\n      chartTitle: '浙江省李姓家谱数量变化',  // 折线图默认标题\n      ChartTitle: '浙江省李姓家谱版本类型统计',\n      clickedWord: null,\n      showPopup: false,\n      selectedProvince: '浙江', // 默认选中省份\n      defaultSurname: '李', // 默认姓氏\n      sankeyData: [], // 用来存储桑基图数据\n      // ##################################################\n      popupMessage: \"该省份暂无数据，请选择其他省份！\", // 弹窗提示信息\n      // ##################################################\n    };\n  },\n  methods: {\n    setActive(index) {\n      this.activeIndex = index;\n    },\n\n    // // 获取选中省份的前20个姓氏\n    // getTop20Surnames(province) {\n    //   const surnameCounts = {};\n    //   jsonData.forEach((item) => {\n    //     if (item.居地 === province) {\n    //       surnameCounts[item.姓氏] = (surnameCounts[item.姓氏] || 0) + 1;\n    //     }\n    //   });\n\n    //   const sortedSurnames = Object.entries(surnameCounts).sort((a, b) => b[1] - a[1]);\n    //   return sortedSurnames.map(([name]) => ({ name, light: true }));\n    // },\n\n    //  ##################################################\n     // 获取选中省份的前30个姓氏\n     getTop20Surnames(province) {\n      const surnameCounts = {};\n\n      // 统计姓氏数量\n      jsonData.forEach((item) => {\n        if (item.居地 === province) {\n          surnameCounts[item.姓氏] = (surnameCounts[item.姓氏] || 0) + 1;\n        }\n      });\n\n      // 如果该省份没有数据，触发弹窗\n      if (Object.keys(surnameCounts).length === 0) {\n        this.showPopup = true; // 显示弹窗\n        return []; // 返回空数组，避免继续执行\n      }\n\n      // 按数量从高到低排序\n      const sortedSurnames = Object.entries(surnameCounts).sort((a, b) => b[1] - a[1]);\n\n      // 分配样式类别\n      // eslint-disable-next-line no-unused-vars\n      return sortedSurnames.slice(0, 30).map(([name, count], index) => {\n        let lightClass;\n        if (index < 10) {\n          lightClass = \"large\"; // 前 10 个用 large\n        } else if (index < 20) {\n          lightClass = \"medium\"; // 10-20 名用 medium\n        } else {\n          lightClass = \"small\"; // 20-30 名用 small\n        }\n        return { name, light: lightClass }; // 返回对应的样式类别\n      });\n    },\n    closePopup() {\n      this.showPopup = false; // 关闭弹窗\n    },\n    //  ##################################################\n\n    // 获取指定姓氏的版本年代数据\n    getSurnameVersionData(surname) {\n      const versionCounts = {};\n\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          const version = item.版本年代;\n          versionCounts[version] = (versionCounts[version] || 0) + 1;\n        }\n      });\n\n      const versionData = Object.entries(versionCounts).map(([version, count]) => ({\n        version,\n        count,\n      }));\n\n      versionData.sort((a, b) => a.version - b.version);\n      return versionData;\n    },\n\n    getVersionTypeData(surname) {\n      const versionTypeCounts = {};\n\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          const version = item.版本类型;\n          versionTypeCounts[version] = (versionTypeCounts[version] || 0) + 1;\n        }\n      });\n\n      const  versionTypeData = Object.entries(versionTypeCounts).map(([version, count]) => ({\n        version,\n        count,\n      }));\n\n      versionTypeData.sort((a, b) => a.version - b.version);\n      return versionTypeData;\n    },\n\n    ,\n\n// 检查是否形成环路\n    isCircular(link, existingLinks) {\n      const source = link.source;\n      const target = link.target;\n\n      // 通过已存在的链接判断是否形成环路\n      return existingLinks.some(existingLink => {\n        return existingLink.source === target && existingLink.target === source;\n      });\n    },\n\n    // 处理词云点击事件，显示该姓氏的版本年代数据\n    handleWordClick(word) {\n      const surname = word.name;\n      this.versionData = this.getSurnameVersionData(surname);\n      this.chartTitle = `${this.selectedProvince}省${surname}姓家谱数量变化`;  // 动态更新标题\n      this.updateLineChart(this.versionData); // 更新折线图\n\n      this.versionTypeData = this.getVersionTypeData(surname); // 获取该姓氏的版本类型数据\n      this.ChartTitle = `${this.selectedProvince}省${surname}姓家谱版本类型统计`;  // 动态更新标题\n      this.updatePieChart(this.versionTypeData); // 调用饼图更新方法\n\n      this.sankeyData = this.getSankeyData(surname); // 更新桑基图数据\n      this.$refs.sangJiTu.updateChart(this.sankeyData); // 更新桑基图\n    },\n\n    // 更新折线图\n    updateLineChart(versionData) {\n      this.$refs.zheXianTu.updateChart(versionData);\n    },\n    // 更新饼图\n    updatePieChart(versionTypeData) {\n      this.$refs.zhuZhuangTu.updateChart(versionTypeData); // 通过ref更新柱状图组件的数据\n    },\n\n    // 处理地图点击事件，更新当前选中的省份\n    handleProvinceClick(province) {\n      this.selectedProvince = province;\n      this.words = this.getTop20Surnames(province);  // 更新词云数据\n\n      this.versionData = this.getSurnameVersionData(this.defaultSurname);  // 获取默认“李”姓数据\n      this.chartTitle = `${province}省${this.defaultSurname}姓家谱数量变化`;  // 更新标题\n\n      this.versionTypeData = this.getVersionTypeData(this.defaultSurname);\n      this.ChartTitle = `${province}省${this.defaultSurname}姓家谱版本类型统计`;\n\n      this.sankeyData = this.getSankeyData(this.defaultSurname); // 默认展示“李”姓的桑基图\n      this.$refs.sangJiTu.updateChart(this.sankeyData); // 更新桑基图\n    },\n\n    // closePopup() {\n    //   this.showPopup = false;\n    // },\n  },\n  mounted() {\n    this.words = this.getTop20Surnames(this.selectedProvince);  // 初始化词云数据\n    this.versionData = this.getSurnameVersionData(this.defaultSurname);  // 默认显示“李”姓数据\n    this.versionTypeData = this.getVersionTypeData(this.defaultSurname);\n    this.sankeyData = this.getSankeyData(this.defaultSurname); // 默认展示“李”姓的桑基图\n  },\n};\n</script>\n\n<style scoped>\n@import './assets/font/font.css'; /* ############ add ######################## */\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n\n  background-image: url('./assets/picture/background4.jpg'); /* 替换为你的图片路径 */\n  background-size: cover; /* 背景填满整个页面 */\n  background-position: center; /* 背景居中 */\n  background-attachment: fixed; /* 背景固定，不随页面滚动 */\n}\nh1 {\n  font-family: '方正隶变简体', serif;\n  font-size: 9vh;\n  color: #000000;\n  margin-bottom: 20px;\n  font-weight:normal;\n  text-shadow: 3px 3px 5px grey;   /* #################################### */\n}\n#xungen{\n  font-size: 11vh;\n  margin-top:0;\n}\nh3 {\n  font-family: '方正隶变简体', serif;\n  font-size: 4vh;\n  color: #363533;\n  font-weight:normal;\n}\n\n\n\n\n/* ############ add start ######################## */\n.focus-img {\n  position: relative;\n  width: 100%;\n  height: 100vh; /* 可调整图片高度 */\n}\n.focus-img .img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* 保证图片按比例填充容器 */\n}\n.focus-img .content {\n  position: absolute;\n  top: 53%; /* 居中 */\n  left: 47%;\n  height: 100%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  display: flex; /* 使用Flexbox布局 */\n  align-items: center; /* 垂直居中 */\n  justify-content: center; /* 居中对齐内容 */\n  gap:5vh\n}\n.logo img {\n  width: 30vw; \n  height: 30vw; \n  border-radius: 10%;\n}\n.text-content {\n  display: flex;\n  flex-direction: column; /* 使标题纵向排列 */\n  align-items: center; /* 文本内容居中 */\n}\n/* ############# add end ####################### */\n\n\n.focus-image {\n  position: relative;\n  width: 100%;\n  height: 100vh; /* 可调整图片高度 */\n}\n.focus-image .image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* 保证图片按比例填充容器 */\n  background-color: gray;\n}\n\n.focus-image .title {\n  position: absolute;\n  top: 40%; /* 居中 */\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #fffff0;\n  border-bottom: 1px solid #ddd;\n  font-family: 'Arial', sans-serif;\n  margin-left: 200px;\n  border: none;\n}\n.navbar-title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #000;\n}\n.navbar-menu {\n  display: flex;\n  gap: 20px;\n  margin-right: 200px;\n}\n.menu-item {\n  text-decoration: none;\n  color: #333;\n  font-size: 1rem;\n  padding: 5px 10px;\n  position: relative;\n  transition: color 0.3s ease;\n}\n.menu-item:hover {\n  color: #f60;\n}\n.menu-item.active {\n  color: #f60;\n  font-weight: bold;\n}\n.horizontal-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  padding: 10px;\n}\n\n\n\n/* ############### add start##################### */\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n}\n.popup-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n}\n.popup-content p {\n  margin-bottom: 20px;\n  font-size: 1rem;\n}\n.popup-content button {\n  padding: 10px 20px;\n  border: none;\n  background-color: #f60;\n  color: white;\n  font-size: 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n}\n.popup-content button:hover {\n  background-color: #e55;\n}\n/* ############# add end ####################### */\n\n</style>\n\n<style>\n/* 确保 HTML 和 body 没有默认边距 */\nhtml, body {\n  margin: 0; /* 去除外边距 */\n  padding: 0; /* 去除内边距 */\n  width: 100%; /* 设置宽度为100% */\n  height: 100%; /* 设置高度为100% */\n  overflow-x: hidden; /* 防止水平滚动条 */\n}\n\n/* 修改 #app 的样式，让背景图片填满整个页面 */\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n\n  background-image: url('./assets/picture/background4.jpg'); /* 替换为你的图片路径 */\n  background-position: center; /* 背景居中 */\n  background-attachment: fixed; /* 背景固定，不随页面滚动 */\n  width: 100%; /* 设置宽度为100% */\n  min-height: 100vh; /* 确保高度为视口高度 */\n}\n\n#app::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.5); /* 半透明的灰色遮罩 */\n  z-index: 1; /* 确保遮罩层在背景图片上方 */\n  background-size: cover; /* 背景填满整个页面 */\n}\n\n/* 确保内容在遮罩层之上 */\n#app > * {\n  position: relative;\n  z-index: 2; /* 确保内容在遮罩层之上 */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}