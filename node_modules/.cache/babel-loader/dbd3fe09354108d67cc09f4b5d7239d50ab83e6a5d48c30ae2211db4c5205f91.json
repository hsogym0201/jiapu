{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport XingShiXuanZe from './components/XingShiXuanZe.vue';\nimport DiTu1 from './components/DiTu1.vue';\nimport CiYun from '@/components/CiYun.vue';\nimport DiTu2 from '@/components/DiTu2.vue';\nimport ZheXianTu from '@/components/ZheXianTu.vue';\nimport ZhuZhuangTu from '@/components/ZhuZhuangTu.vue';\nimport SangJiTu from \"@/components/SangJiTu.vue\";\nimport { Swiper, SwiperSlide } from 'vue-awesome-swiper';\nimport 'swiper/swiper-bundle.css'; // 引入样式\n\nconst jsonData = require('./assets/new.json');\nexport default {\n  name: 'App',\n  components: {\n    SangJiTu,\n    XingShiXuanZe,\n    DiTu1,\n    CiYun,\n    DiTu2,\n    ZheXianTu,\n    ZhuZhuangTu,\n    Swiper,\n    SwiperSlide\n  },\n  data() {\n    return {\n      menuItems: ['家谱地图展示', '地域姓氏构成对比', '姓氏时空上的分布趋势'],\n      activeIndex: 0,\n      words: [],\n      versionData: [],\n      versionTypeData: [],\n      chartTitle: '浙江省李姓家谱数量变化',\n      ChartTitle: '浙江省李姓家谱版本类型统计',\n      clickedWord: null,\n      showPopup: false,\n      selectedProvince: '浙江',\n      defaultSurname: '李',\n      sankeyData: [],\n      // 新增桑基图数据\n      swiperOptions: {\n        loop: true,\n        autoplay: {\n          delay: 3000\n        },\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    };\n  },\n  methods: {\n    setActive(index) {\n      this.activeIndex = index;\n    },\n    getTop20Surnames(province) {\n      const surnameCounts = {};\n      jsonData.forEach(item => {\n        if (item.居地 === province) {\n          surnameCounts[item.姓氏] = (surnameCounts[item.姓氏] || 0) + 1;\n        }\n      });\n      const sortedSurnames = Object.entries(surnameCounts).sort((a, b) => b[1] - a[1]);\n      return sortedSurnames.map(([name]) => ({\n        name,\n        light: true\n      }));\n    },\n    getSurnameVersionData(surname) {\n      const versionCounts = {};\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          const version = item.版本年代;\n          versionCounts[version] = (versionCounts[version] || 0) + 1;\n        }\n      });\n      const versionData = Object.entries(versionCounts).map(([version, count]) => ({\n        version,\n        count\n      }));\n      versionData.sort((a, b) => a.version - b.version);\n      return versionData;\n    },\n    getVersionTypeData(surname) {\n      const versionTypeCounts = {};\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          const version = item.版本类型;\n          versionTypeCounts[version] = (versionTypeCounts[version] || 0) + 1;\n        }\n      });\n      const versionTypeData = Object.entries(versionTypeCounts).map(([version, count]) => ({\n        version,\n        count\n      }));\n      versionTypeData.sort((a, b) => a.version - b.version);\n      return versionTypeData;\n    },\n    handleWordClick(word) {\n      const surname = word.name;\n      this.versionData = this.getSurnameVersionData(surname);\n      this.chartTitle = `${this.selectedProvince}省${surname}姓家谱数量变化`;\n      this.updateLineChart(this.versionData);\n      this.versionTypeData = this.getVersionTypeData(surname);\n      this.ChartTitle = `${this.selectedProvince}省${surname}姓家谱版本类型统计`;\n      this.updatePieChart(this.versionTypeData);\n      this.sankeyData = this.getSankeyData(surname);\n    },\n    handleProvinceClick(province) {\n      this.selectedProvince = province;\n      this.words = this.getTop20Surnames(province);\n      this.versionData = this.getSurnameVersionData(this.defaultSurname);\n      this.chartTitle = `${province}省${this.defaultSurname}姓家谱数量变化`;\n      this.versionTypeData = this.getVersionTypeData(this.defaultSurname);\n      this.ChartTitle = `${province}省${this.defaultSurname}姓家谱版本类型统计`;\n      this.sankeyData = this.getSankeyData(this.defaultSurname);\n    },\n    closePopup() {\n      this.showPopup = false;\n    },\n    // 新增方法生成桑基图数据\n    getSankeyData(surname) {\n      const sankeyCounts = {\n        始祖原居地: [],\n        始祖迁居地: [],\n        始迁祖原居地: [],\n        始迁祖迁居地: []\n      };\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          sankeyCounts['始祖原居地'].push(item.始祖原居地);\n          sankeyCounts['始祖迁居地'].push(item.始祖迁居地);\n          sankeyCounts['始迁祖原居地'].push(item.始迁祖原居地);\n          sankeyCounts['始迁祖迁居地'].push(item.始迁祖迁居地);\n        }\n      });\n\n      // 去重处理\n      Object.keys(sankeyCounts).forEach(key => {\n        sankeyCounts[key] = [...new Set(sankeyCounts[key])];\n      });\n\n      // 格式化数据为桑基图所需的格式\n      const sankeyData = [{\n        name: '始祖原居地',\n        nodes: sankeyCounts['始祖原居地']\n      }, {\n        name: '始祖迁居地',\n        nodes: sankeyCounts['始祖迁居地']\n      }, {\n        name: '始迁祖原居地',\n        nodes: sankeyCounts['始迁祖原居地']\n      }, {\n        name: '始迁祖迁居地',\n        nodes: sankeyCounts['始迁祖迁居地']\n      }];\n      return sankeyData;\n    }\n  }\n};","map":{"version":3,"names":["XingShiXuanZe","DiTu1","CiYun","DiTu2","ZheXianTu","ZhuZhuangTu","SangJiTu","Swiper","SwiperSlide","jsonData","require","name","components","data","menuItems","activeIndex","words","versionData","versionTypeData","chartTitle","ChartTitle","clickedWord","showPopup","selectedProvince","defaultSurname","sankeyData","swiperOptions","loop","autoplay","delay","pagination","el","clickable","navigation","nextEl","prevEl","methods","setActive","index","getTop20Surnames","province","surnameCounts","forEach","item","居地","姓氏","sortedSurnames","Object","entries","sort","a","b","map","light","getSurnameVersionData","surname","versionCounts","version","版本年代","count","getVersionTypeData","versionTypeCounts","版本类型","handleWordClick","word","updateLineChart","updatePieChart","getSankeyData","handleProvinceClick","closePopup","sankeyCounts","始祖原居地","始祖迁居地","始迁祖原居地","始迁祖迁居地","push","keys","key","Set","nodes"],"sources":["D:\\project\\idea-project\\jiapudemo1\\jiapudemo1\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"swiper-container\">\n      <swiper :options=\"swiperOptions\">\n        <swiper-slide>\n          <img src=\"@/assets/picture/FocusMap1.jpg\" alt=\"Slide 1\" />\n        </swiper-slide>\n        <swiper-slide>\n          <img src=\"@/assets/picture/FocusMap2.jpg\" alt=\"Slide 2\" />\n        </swiper-slide>\n      </swiper>\n    </div>\n\n    <h1>寻根问祖，探索家族的历史脉络</h1>\n    <h3>每个姓氏背后都有一段深厚的历史与文化...</h3>\n\n    <div class=\"navbar\">\n      <div class=\"navbar-title\">\n        寻根问祖 <span>可以看见的家谱可视化平台</span>\n      </div>\n      <div class=\"navbar-menu\">\n        <a\n            v-for=\"(item, index) in menuItems\"\n            :key=\"index\"\n            href=\"#\"\n            :class=\"['menu-item', { active: activeIndex === index }]\"\n            @click=\"setActive(index)\"\n        >\n          {{ item }}\n        </a>\n      </div>\n    </div>\n\n    <h4>家谱地图展示--了解你的姓氏在全国各地的家族故事</h4>\n    <div class=\"horizontal-container\">\n      <XingShiXuanZe />\n      <DiTu1 />\n    </div>\n\n    <hr />\n    <h4>地域姓氏构成对比--探索各地的家族足迹</h4>\n    <div class=\"horizontal-container\">\n      <CiYun :wordArr=\"words\" @word-clicked=\"handleWordClick\" />\n      <DiTu2 @province-clicked=\"handleProvinceClick\" />\n    </div>\n\n    <hr />\n    <h4>姓氏时空上的分布趋势--深入家族传承之路与繁衍之势</h4>\n    <div class=\"horizontal-container\">\n      <ZheXianTu ref=\"zheXianTu\" :versionData=\"versionData\" :chartTitle=\"chartTitle\" />\n      <ZhuZhuangTu ref=\"zhuZhuangTu\" :versionTypeData=\"versionTypeData\" :ChartTitle=\"ChartTitle\" />\n    </div>\n    <hr />\n    <SangJiTu :sankeyData=\"sankeyData\" />\n\n  </div>\n</template>\n\n<script>\nimport XingShiXuanZe from './components/XingShiXuanZe.vue';\nimport DiTu1 from './components/DiTu1.vue';\nimport CiYun from '@/components/CiYun.vue';\nimport DiTu2 from '@/components/DiTu2.vue';\nimport ZheXianTu from '@/components/ZheXianTu.vue';\nimport ZhuZhuangTu from '@/components/ZhuZhuangTu.vue';\nimport SangJiTu from \"@/components/SangJiTu.vue\";\nimport { Swiper, SwiperSlide } from 'vue-awesome-swiper';\nimport 'swiper/swiper-bundle.css';  // 引入样式\n\nconst jsonData = require('./assets/new.json');\n\nexport default {\n  name: 'App',\n  components: {\n    SangJiTu,\n    XingShiXuanZe,\n    DiTu1,\n    CiYun,\n    DiTu2,\n    ZheXianTu,\n    ZhuZhuangTu,\n    Swiper,\n    SwiperSlide\n  },\n  data() {\n    return {\n      menuItems: ['家谱地图展示', '地域姓氏构成对比', '姓氏时空上的分布趋势'],\n      activeIndex: 0,\n      words: [],\n      versionData: [],\n      versionTypeData: [],\n      chartTitle: '浙江省李姓家谱数量变化',\n      ChartTitle: '浙江省李姓家谱版本类型统计',\n      clickedWord: null,\n      showPopup: false,\n      selectedProvince: '浙江',\n      defaultSurname: '李',\n      sankeyData: [],  // 新增桑基图数据\n      swiperOptions: {\n        loop: true,\n        autoplay: {\n          delay: 3000,\n        },\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    };\n  },\n  methods: {\n    setActive(index) {\n      this.activeIndex = index;\n    },\n    getTop20Surnames(province) {\n      const surnameCounts = {};\n      jsonData.forEach((item) => {\n        if (item.居地 === province) {\n          surnameCounts[item.姓氏] = (surnameCounts[item.姓氏] || 0) + 1;\n        }\n      });\n\n      const sortedSurnames = Object.entries(surnameCounts).sort((a, b) => b[1] - a[1]);\n      return sortedSurnames.map(([name]) => ({ name, light: true }));\n    },\n    getSurnameVersionData(surname) {\n      const versionCounts = {};\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          const version = item.版本年代;\n          versionCounts[version] = (versionCounts[version] || 0) + 1;\n        }\n      });\n\n      const versionData = Object.entries(versionCounts).map(([version, count]) => ({\n        version,\n        count,\n      }));\n\n      versionData.sort((a, b) => a.version - b.version);\n      return versionData;\n    },\n    getVersionTypeData(surname) {\n      const versionTypeCounts = {};\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          const version = item.版本类型;\n          versionTypeCounts[version] = (versionTypeCounts[version] || 0) + 1;\n        }\n      });\n\n      const versionTypeData = Object.entries(versionTypeCounts).map(([version, count]) => ({\n        version,\n        count,\n      }));\n\n      versionTypeData.sort((a, b) => a.version - b.version);\n      return versionTypeData;\n    },\n    handleWordClick(word) {\n      const surname = word.name;\n      this.versionData = this.getSurnameVersionData(surname);\n      this.chartTitle = `${this.selectedProvince}省${surname}姓家谱数量变化`;\n      this.updateLineChart(this.versionData);\n\n      this.versionTypeData = this.getVersionTypeData(surname);\n      this.ChartTitle = `${this.selectedProvince}省${surname}姓家谱版本类型统计`;\n      this.updatePieChart(this.versionTypeData);\n\n      this.sankeyData = this.getSankeyData(surname);\n    },\n    handleProvinceClick(province) {\n      this.selectedProvince = province;\n      this.words = this.getTop20Surnames(province);\n\n      this.versionData = this.getSurnameVersionData(this.defaultSurname);\n      this.chartTitle = `${province}省${this.defaultSurname}姓家谱数量变化`;\n\n      this.versionTypeData = this.getVersionTypeData(this.defaultSurname);\n      this.ChartTitle = `${province}省${this.defaultSurname}姓家谱版本类型统计`;\n\n      this.sankeyData = this.getSankeyData(this.defaultSurname);\n    },\n    closePopup() {\n      this.showPopup = false;\n    },\n    // 新增方法生成桑基图数据\n    getSankeyData(surname) {\n      const sankeyCounts = {\n        始祖原居地: [],\n        始祖迁居地: [],\n        始迁祖原居地: [],\n        始迁祖迁居地: []\n      };\n\n      jsonData.forEach(item => {\n        if (item.姓氏 === surname && item.居地 === this.selectedProvince) {\n          sankeyCounts['始祖原居地'].push(item.始祖原居地);\n          sankeyCounts['始祖迁居地'].push(item.始祖迁居地);\n          sankeyCounts['始迁祖原居地'].push(item.始迁祖原居地);\n          sankeyCounts['始迁祖迁居地'].push(item.始迁祖迁居地);\n        }\n      });\n\n      // 去重处理\n      Object.keys(sankeyCounts).forEach(key => {\n        sankeyCounts[key] = [...new Set(sankeyCounts[key])];\n      });\n\n      // 格式化数据为桑基图所需的格式\n      const sankeyData = [\n        { name: '始祖原居地', nodes: sankeyCounts['始祖原居地'] },\n        { name: '始祖迁居地', nodes: sankeyCounts['始祖迁居地'] },\n        { name: '始迁祖原居地', nodes: sankeyCounts['始迁祖原居地'] },\n        { name: '始迁祖迁居地', nodes: sankeyCounts['始迁祖迁居地'] }\n      ];\n\n      return sankeyData;\n    }\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n\n  background-image: url('./assets/picture/background1.jpg'); /* 替换为你的图片路径 */\n  background-size: cover; /* 背景填满整个页面 */\n  background-position: center; /* 背景居中 */\n  background-attachment: fixed; /* 背景固定，不随页面滚动 */\n}\nh1 {\n  font-family: 'Georgia', serif;\n  font-size: 2.5rem;\n  color: #2c3e50;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  margin-bottom: 20px;\n}\nh3 {\n  font-family: 'Arial', sans-serif;\n  font-size: 1.2rem;\n  color: #34495e;\n  line-height: 1.8;\n  max-width: 800px;\n  margin: 0 auto;\n  text-align: justify;\n}\n.swiper-container {\n  width: 100%;\n  height: 50vh; /* 控制轮播图的高度 */\n  margin: 0 auto;\n  overflow: hidden; /* 防止内容溢出 */\n  position: relative;\n  z-index: 1; /* 确保轮播图的层级不会遮盖其他内容 */\n}\n.page-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px; /* 给内容区域顶部留出间距 */\n}\n.swiper-slide img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* 使图片不变形，填满容器 */\n}\n/* 针对不同设备做调整 */\n@media (max-width: 768px) {\n  .swiper-container {\n    height: 40vh; /* 在较小屏幕上减少高度 */\n  }\n}\n@media (max-width: 480px) {\n  .swiper-container {\n    height: 30vh; /* 在极小屏幕上减少高度 */\n  }\n}\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #fffff0;\n  border-bottom: 1px solid #ddd;\n  font-family: 'Arial', sans-serif;\n  margin-left: 200px;\n  border: none;\n}\n.navbar-title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #000;\n}\n.navbar-menu {\n  display: flex;\n  gap: 20px;\n  margin-right: 200px;\n}\n.menu-item {\n  text-decoration: none;\n  color: #333;\n  font-size: 1rem;\n  padding: 5px 10px;\n  position: relative;\n  transition: color 0.3s ease;\n}\n.menu-item:hover {\n  color: #f60;\n}\n.menu-item.active {\n  color: #f60;\n  font-weight: bold;\n}\n.horizontal-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  padding: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}