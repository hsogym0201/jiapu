{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"SangJiTu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    id: \"SangJiTU\"\n  }, null, -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createElementVNode","id"],"sources":["D:\\project\\idea-project\\jiapudemo1\\jiapudemo1\\src\\components\\SangJiTu.vue"],"sourcesContent":["<template>\r\n  <div class=\"SangJiTu\">\r\n    <div id=\"SangJiTU\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts/core\";\r\nimport { SankeyChart } from \"echarts/charts\";\r\nimport { TitleComponent, TooltipComponent } from \"echarts/components\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\n\r\n// 注册必要的组件\r\necharts.use([SankeyChart, TitleComponent, TooltipComponent, CanvasRenderer]);\r\n\r\nexport default {\r\n  name: \"SangJiTu\",\r\n  props: {\r\n    sankeyData: Object, // 从父组件传递过来的桑基图数据\r\n  },\r\n  watch: {\r\n    sankeyData(newData) {\r\n      if (newData && newData.nodes.length > 0) {\r\n        this.updateChart(newData); // 数据变化时更新图表\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      const chartDom = document.getElementById(\"SangJiTU\");\r\n      this.myChart = echarts.init(chartDom);\r\n    },\r\n\r\n    updateChart(sankeyData) {\r\n      // 简化的颜色设置，每个节点和连接使用相同的颜色\r\n      const nodeColor = \"#82aaff\"; // 示例颜色\r\n      const linkColor = \"#cfcfcf\"; // 示例颜色\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"家族迁徙路径\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        series: [\r\n          {\r\n            type: \"sankey\",\r\n            data: sankeyData.nodes.map(node => ({\r\n              ...node,\r\n              itemStyle: { color: nodeColor }, // 设置节点颜色\r\n            })),\r\n            links: sankeyData.links.map(link => ({\r\n              ...link,\r\n              itemStyle: { color: linkColor }, // 设置连接颜色\r\n            })),\r\n            emphasis: {\r\n              focus: \"adjacency\",\r\n            },\r\n            lineStyle: {\r\n              color: \"source\",\r\n              opacity: 0.6,\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.myChart.setOption(option);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.SangJiTu {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n#SangJiTU {\r\n  width: 80%;\r\n  height: 600px;\r\n  margin: 0 auto;\r\n  background: #fff;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;uBAArBC,mBAAA,CAEM,OAFNC,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJC,mBAAA,CAAyB;IAApBC,EAAE,EAAC;EAAU,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}